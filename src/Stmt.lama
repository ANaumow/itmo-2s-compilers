-- Statement evaluator.

import State;
import Expr;
import World;

-- Evaluates a statement "stmt" in a configuration "c".
-- A configuration is a pair of a state "s" and a world "w".
-- Returns a final configuration (if any)
public fun evalStmt (c@[s, w], stmt) {
  case stmt of
    Assn  (x, e)   -> [s <- [x, evalExpr (s, e)], w]
  | Seq   (s1, s2) -> evalStmt (evalStmt (c, s1), s2)
  | Skip           -> c
  | Read  (x)      -> case readWorld (w) of
                        [n, w] -> [s <- [x, n], w]
                      esac
  | Write (e)      -> [s, writeWorld (evalExpr (s, e), w)]
  esac
}